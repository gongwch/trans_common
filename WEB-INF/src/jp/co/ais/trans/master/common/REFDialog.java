package jp.co.ais.trans.master.common;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

import com.klg.jclass.table.data.*;

import jp.co.ais.trans.common.gui.*;

/**
 * 共通の検索ダイアログ
 * 
 * @author lipu
 */
public class REFDialog extends TDialog {

	/** シリアルUID */
	private static final long serialVersionUID = 8943347501807346081L;

	/** コントロールクラス */
	private REFDialogCtrl ctrl;

	/** 選択されたレコードのコード */
	String selectedCode = null;

	/** 選択されたレコードの名称 */
	String selectedName_S = null;

	/** スプレッドシートDataSource */
	JCVectorDataSource ds = new JCVectorDataSource();

	/**
	 * コンストラクタ
	 * 
	 * @param parent
	 * @param modal
	 * @param ctrl コントロールクラス
	 * @param titleID
	 */
	public REFDialog(Dialog parent, boolean modal, REFDialogCtrl ctrl, String titleID) {
		super(parent, modal);
		this.ctrl = ctrl;
		initComponents();
		this.setTitle(titleID);

		initSpreadSheet();
		setTxtKeyListener();
		super.initDialog();
	}

	/**
	 * @param parent
	 * @param modal
	 * @param ctrl
	 * @param titleID
	 */
	public REFDialog(Frame parent, boolean modal, REFDialogCtrl ctrl, String titleID) {
		super(parent, modal);
		this.ctrl = ctrl;
		initComponents();
		this.setTitle(titleID);
		initSpreadSheet();
		setTxtKeyListener();
		super.initDialog();
	}

	private void initSpreadSheet() {
		// 初期表示データの構築
		ds.setNumColumns(3);
		ds.setNumRows(0);

		// タイトル
		String[] columnLabelMessageIDs = new String[] { ctrl.columnLabel1, ctrl.columnLabel2, ctrl.columnLabel3 };
		// セル幅
		int[] columnWidths = new int[] { 10, 20, 20, 0, 0 };

		if (ctrl.columnLabel2 == null && ctrl.columnLabel3 == null) {
			columnWidths = new int[] { 52, 0, 0, 0, 0 };
			this.txtAbbreviationName.setEnabled(false);
			this.txtAbbreviationName.setEditable(false);
			this.txtNameForSearch.setEnabled(false);
			this.txtNameForSearch.setEditable(false);
			ds.setNumColumns(1);
		} else if (ctrl.columnLabel3 == null) {
			columnWidths = new int[] { 10, 20, 0, 0, 0 };
			this.txtNameForSearch.setEnabled(false);
			this.txtNameForSearch.setEditable(false);
			ds.setNumColumns(2);
		}

		// 列、行表題のスタイル設定
		ssJournal.initSpreadSheet(columnLabelMessageIDs, columnWidths);
		// スプレッドイベントの初期化
		ssJournal.addSpreadSheetSelectChange(btnSettle);

		ssJournal.setDataSource(ds);
	}

	/**
	 * フレームを返す
	 */
	public Frame getParentFrame() {
		return super.getParentFrame();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
	 * content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		pnlDetial = new TPanel();
		pnlJournal = new TPanel();
		ssJournal = new TTable();
		pnlText = new TPanel();
		txtCode = new TTextField();
		txtNameForSearch = new TTextField();
		txtAbbreviationName = new TTextField();
		pnlButton = new TPanel();
		btnSearch = new TButton();
		btnSettle = new TButton();
		btnCancel = new TButton();

		setLayout(new GridBagLayout());

		pnlDetial.setLayout(new GridBagLayout());

		pnlDetial.setMaximumSize(new Dimension(700, 350));
		pnlDetial.setMinimumSize(new Dimension(700, 350));
		pnlDetial.setPreferredSize(new Dimension(700, 350));
		pnlJournal.setLayout(new javax.swing.BoxLayout(pnlJournal, BoxLayout.X_AXIS));

		pnlJournal.setMaximumSize(new Dimension(680, 290));
		pnlJournal.setMinimumSize(new Dimension(680, 290));
		pnlJournal.setPreferredSize(new Dimension(680, 290));
		ssJournal.setTabControlNo(7);
		ssJournal.setSort(true);
		pnlJournal.add(ssJournal);

		pnlDetial.add(pnlJournal, new GridBagConstraints());

		pnlText.setLayout(new GridBagLayout());

		pnlText.setMaximumSize(new Dimension(680, 30));
		pnlText.setMinimumSize(new Dimension(680, 30));
		pnlText.setPreferredSize(new Dimension(680, 30));
		txtCode.setMaximumSize(new Dimension(126, 20));
		txtCode.setMinimumSize(new Dimension(126, 20));
		txtCode.setPreferredSize(new Dimension(126, 20));
		txtCode.setImeMode(false);
		txtCode.setTabControlNo(1);
		txtCode.setMaxLength(10);

		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
		pnlText.add(txtCode, gridBagConstraints);

		txtNameForSearch.setMaximumSize(new Dimension(245, 20));
		txtNameForSearch.setMinimumSize(new Dimension(245, 20));
		txtNameForSearch.setPreferredSize(new Dimension(245, 20));
		txtNameForSearch.setTabControlNo(3);
		txtNameForSearch.setMaxLength(40);
		txtNameForSearch.setProhibitionWords("％", "＿");

		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new Insets(5, 0, 0, 0);
		pnlText.add(txtNameForSearch, gridBagConstraints);

		txtAbbreviationName.setMaximumSize(new Dimension(246, 20));
		txtAbbreviationName.setMinimumSize(new Dimension(246, 20));
		txtAbbreviationName.setPreferredSize(new Dimension(246, 20));
		txtAbbreviationName.setTabControlNo(2);
		txtAbbreviationName.setMaxLength(80);
		txtAbbreviationName.setProhibitionWords("％", "＿");

		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new Insets(5, 0, 0, 0);
		pnlText.add(txtAbbreviationName, gridBagConstraints);

		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new Insets(0, 21, 0, 0);
		pnlDetial.add(pnlText, gridBagConstraints);

		pnlButton.setLayout(new GridBagLayout());

		pnlButton.setMaximumSize(new Dimension(680, 35));
		pnlButton.setMinimumSize(new Dimension(680, 35));
		pnlButton.setPreferredSize(new Dimension(680, 35));

		btnSearch.setLangMessageID("C00155");
		btnSearch.setShortcutKey(KeyEvent.VK_F2);
		btnSearch.setMaximumSize(new Dimension(110, 25));
		btnSearch.setMinimumSize(new Dimension(110, 25));
		btnSearch.setPreferredSize(new Dimension(110, 25));
		btnSearch.setTabControlNo(4);
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.insets = new Insets(5, 10, 0, 0);
		pnlButton.add(btnSearch, gridBagConstraints);
		btnSearch.addActionListener(new ActionListener() {

			// 検索ボタン押下の処理
			public void actionPerformed(ActionEvent evt) {
				ctrl.dialogFinds();
			}
		});

		btnSettle.setLangMessageID("C01019");
		btnSettle.setShortcutKey(KeyEvent.VK_F8);
		btnSettle.setMaximumSize(new Dimension(110, 25));
		btnSettle.setMinimumSize(new Dimension(110, 25));
		btnSettle.setPreferredSize(new Dimension(110, 25));
		btnSettle.setTabControlNo(5);
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.insets = new Insets(5, 10, 0, 0);
		pnlButton.add(btnSettle, gridBagConstraints);
		btnSettle.addActionListener(new ActionListener() {

			// 確定ボタン押下の処理
			public void actionPerformed(ActionEvent evt) {
				ctrl.dialogSettle();
			}
		});

		// btnCancel.setText("\u53d6 \u6d88");
		btnCancel.setLangMessageID("C00405");
		btnCancel.setShortcutKey(KeyEvent.VK_F12);
		btnCancel.setMaximumSize(new Dimension(110, 25));
		btnCancel.setMinimumSize(new Dimension(110, 25));
		btnCancel.setPreferredSize(new Dimension(110, 25));
		btnCancel.setTabControlNo(6);
		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.insets = new Insets(5, 10, 0, 0);
		pnlButton.add(btnCancel, gridBagConstraints);
		btnCancel.addActionListener(new ActionListener() {

			// 取消ボタン押下の処理
			public void actionPerformed(ActionEvent evt) {
				selectedCode = null;
				selectedName_S = null;
				ctrl.dialogClosed();
			}
		});

		gridBagConstraints = new GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		pnlDetial.add(pnlButton, gridBagConstraints);

		add(pnlDetial, new GridBagConstraints());

	}

	private void setTxtKeyListener() {
		txtCode.addKeyListener(new KeyAdapter() {

			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {

					if (!txtCode.isFocusOwner() || !txtCode.isEditable()) {
						return;
					}
					ctrl.dialogFinds();

				}
			}
		});

		txtNameForSearch.addKeyListener(new KeyAdapter() {

			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {

					if (!txtNameForSearch.isFocusOwner() || !txtNameForSearch.isEditable()) {
						return;
					}
					ctrl.dialogFinds();

				}
			}
		});

		txtAbbreviationName.addKeyListener(new KeyAdapter() {

			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {

					if (!txtAbbreviationName.isFocusOwner() || !txtAbbreviationName.isEditable()) {
						return;
					}
					ctrl.dialogFinds();

				}
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	TButton btnCancel;

	TButton btnSearch;

	TButton btnSettle;

	private TPanel pnlButton;

	private TPanel pnlDetial;

	private TPanel pnlJournal;

	private TPanel pnlText;

	TTable ssJournal;

	TTextField txtAbbreviationName;

	TTextField txtCode;

	TTextField txtNameForSearch;
	// End of variables declaration//GEN-END:variables

}
